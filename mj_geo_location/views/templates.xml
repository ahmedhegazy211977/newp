<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <template id="address_2" inherit_id="website_sale.address">
        <xpath expr="//select[@name='country_id']" position="replace">
            <select id="country_id" name="country_id" t-attf-class="form-select #{error.get('country_id') and 'is-invalid' or ''}" t-att-mode="mode[1]">
                <option value="">Country...</option>
                <t t-foreach="countries" t-as="c">
                    <option t-att-data-country-code="c.code" t-att-value="c.id" t-att-selected="c.id == (country and country.id or -1)">
                        <t t-esc="c.name" />
                    </option>
                </t>
            </select>
        </xpath>
        <xpath expr="//input[@name='street']/.." position="before">
            <div class="div_map col-md-12" id="wrap">
                <div class="row map_containers">
                    <input type="hidden" name="partner_latitude" t-att-value="'partner_latitude' in checkout and checkout['partner_latitude']" id="partner_latitude"/>
                    <input type="hidden" name="partner_longitude" t-att-value="'partner_longitude' in checkout and checkout['partner_longitude']" id="partner_longitude"/>
                    
                    <script async="async" defer="defer"
                            t-attf-src="https://maps.googleapis.com/maps/api/js?key={{google_maps_api_key}}&amp;callback=initMap&amp;v=weekly&amp;libraries=places&amp;language=en">
                    </script>
                    <!-- Input field for location search -->
                    <div class="col-md-12" style="padding-right: 70px !important;padding-left: 200px !important;margin-bottom: -60px;z-index: 200;padding: 10px;">
                        <input class="form-control" style="width: 26%;display:inline-block" id="search-box" type="text" placeholder="Search for places"/>
                        <!-- <i class="fa fa-map-marker" aria-hidden="true"></i> -->
                        <button style="display:inline-block" class="btn btn-secondary" title="Show my current location" id="current-location-button">احصل على موقعك الحالي</button>    
                    </div>
                    <!-- Map container -->
                    <div class="col-sm-12" style="margin-top: 2px;">
                        <div style="width: 100%; height: 400px;" id="map"></div> <!-- Ensure height is set -->
                    </div>
                </div>
            </div>
            <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
            <script>
                let map;
                let marker;
                let autocomplete;

                function initMap() {
                    // Set default location (latitude and longitude)
                    var partner_latitude = document.getElementById('partner_latitude').value;
                    var partner_longitude = document.getElementById('partner_longitude').value;

                    let defaultLocation;

                    // Check if latitude and longitude values exist
                    if (partner_latitude) {
                        // If values exist, set defaultLocation using those values
                        defaultLocation = { lat: parseFloat(partner_latitude), lng: parseFloat(partner_longitude) };
                        console.log( parseFloat(partner_latitude));
                        console.log( parseFloat(partner_longitude));
                    } else {
                        // Otherwise, set a default location (e.g., New York City)
                        defaultLocation = { lat: 40.7128, lng: -74.0060 };
                    }
                    // Create a map centered at the default location
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: defaultLocation,
                        zoom: 15, // Adjust the zoom level as needed
                    });

                    // Place a marker at the default location
                    marker = new google.maps.Marker({
                        position: defaultLocation,
                        map: map,
                        title: "Default Location",
                    });

                    // Initialize the autocomplete feature
                    const input = document.getElementById('search-box');
                    autocomplete = new google.maps.places.Autocomplete(input);
                    autocomplete.addListener('place_changed', onPlaceChanged);

                    // Set up the button to get the current location
                    const currentLocationButton = document.getElementById('current-location-button');
                    currentLocationButton.addEventListener('click', function(event) {
                        event.preventDefault(); // Prevents default behavior
                        getCurrentLocation();
                    });

                    map.addListener("click", (event) => {
                        const clickedLocation = event.latLng;
                        marker.setPosition(clickedLocation);
                        set_location(clickedLocation);
                        set_lat_long(clickedLocation);
                    });
                }
                function set_lat_long(userLocation){
                    document.getElementById("partner_latitude").value = userLocation.lat();
                    document.getElementById("partner_longitude").value = userLocation.lng();
                }

                function onPlaceChanged() {
                    const place = autocomplete.getPlace();
                    if (!place.geometry) {
                        alert("No details available for input: '" + place.name + "'");
                        return;
                    }

                    // Set the position of the marker and center the map
                    const location = place.geometry.location;
                    set_lat_long(location);
                    set_location(location);
                    marker.setPosition(location);
                    map.setCenter(location);
                    map.setZoom(15); // Adjust the zoom level as needed
                }
                function set_location(userLocation){
                    var geocoder = new google.maps.Geocoder();
                    geocoder.geocode({ 'location': userLocation }, function (results, status) {
                    if (status === 'OK') {
                        if (results[0]) {
                            var addressComponents = results[0].address_components;

                            var countryCode = '';
                            var state = '';
                            //console.log(addressComponents);
                            var street_numbers={};
                            
                            addressComponents.forEach(function(component) {
                                var types = component.types;
                                
                                // Fill in the fields based on the component type
                                if (types.includes('postal_code')) {
                                    var zipcode=document.querySelector('input[name="zip"]');
                                    if(zipcode){
                                        zipcode.value=component.long_name;
                                    }
                                }
                                if (types.includes('street_number')) {
                                    street_numbers[1]='';
                                    if(component.short_name){
                                        street_numbers[1]=component.short_name;
                                    }
                                }
                                if(types.includes('subpremise')){
                                    var building=document.querySelector('input[name="street2"]');
                                    if(building){
                                        if(component.short_name){
                                            building.value=component.short_name;
                                        }
                                    }
                                }
                                if (types.includes('route')) {
                                    if(component.short_name){
                                        street_numbers[0]=component.short_name;
                                    }
                                }
                                if (types.includes('locality')) {
                                    var city=document.querySelector('input[name="city"]');
                                    if(city){
                                        city.value=component.long_name;
                                    }
                                    state=component.long_name;
                                }
                                <!-- if (types.includes('administrative_area_level_1')) {
                                    state = component.short_name;
                                } -->
                                if (types.includes('country')) {
                                    countryCode = component.short_name;
                                }
                            });
                            var address=document.querySelector('input[name="street"]');
                            if(address){
                                var street_name='';
                                if(street_numbers[1]){
                                    street_name+=street_numbers[1];
                                    if(street_numbers[0]){
                                        street_name+=" "+street_numbers[0];
                                    }
                                }
                                else if(street_numbers[0]){
                                    street_name+=street_numbers[0];
                                }
                                address.value=street_name;
                            }
                            // Set country and state
                            setCountryAndState(countryCode, state);
                        } else {
                            console.log('No results found');
                        }
                    } else {
                        console.log('Geocoder failed due to: ' + status);
                    }
                });
            }

                function getCurrentLocation() {
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(
                            (position) => {
                                const lat = position.coords.latitude;
                                const lng = position.coords.longitude;
                                const userLocation = {  lng,lat };
                                set_location(userLocation);
                                document.getElementById("partner_latitude").value = lat;
                                document.getElementById("partner_longitude").value = lng;
                                // Update the map and marker with the user's location
                                marker.setPosition(userLocation);
                                map.setCenter(userLocation);
                                map.setZoom(15); // Adjust the zoom level as needed
                            },
                            (error) => {
                                const errorMessages = {
                                    [error.PERMISSION_DENIED]: "Location access denied. Please allow location access.",
                                    [error.POSITION_UNAVAILABLE]: "Location information is unavailable.",
                                    [error.TIMEOUT]: "The request to get your location timed out.",
                                    [error.UNKNOWN_ERROR]: "An unknown error occurred."
                                };
                                alert(errorMessages[error.code] || "An unknown error occurred.");
                                const defaultLocation = { lat: 40.7128, lng: -74.0060 };
                                map.setCenter(defaultLocation);
                                map.setZoom(10);
                                marker.setPosition(defaultLocation);
                            }
                        );
                    } else {
                        alert("Geolocation is not supported by this browser.");
                    }
                }
                function setCountryAndState(countryCode, stateName) {
                    var countrySelect = document.getElementById('country_id');

                    // Set the country
                    if(countrySelect){
                        for (var i = 0; i &lt; countrySelect.options.length; i++) {
                             if (countrySelect.options[i].getAttribute('data-country-code') === countryCode) {
                                countrySelect.selectedIndex = i;
                                break;
                            }
                        }
                        var event = new Event('change', { bubbles: true });
                        countrySelect.dispatchEvent(event);
                        
                        // Set the state (after the country is set)
                        setTimeout(function() {
                            var stateSelects = document.getElementsByName('state_id');
                            var stateSelect = stateSelects[0];
                            if(stateSelect){
                                for (var j = 0; j &lt; stateSelect.options.length; j++) {
                                    if (stateSelect.options[j].text.toLowerCase() === stateName.toLowerCase()) {
                                        stateSelect.selectedIndex = j;
                                        break;
                                    }
                                }
                            }
                        }, 1000);
                    }
                }
                // Ensure the initMap function is loaded when the Google Maps API is ready
                window.initMap = initMap;
            </script>
        </xpath>
    </template>
</odoo>
